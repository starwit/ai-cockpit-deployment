repositories:
  - name: starwitorg
    url: registry-1.docker.io/starwitorg
    oci: true
  - name: bitnamicharts
    url: registry-1.docker.io/bitnamicharts
    oci: true
  - name: starwit-internal
    url: https://helm.internal.starwit-infra.de
    username: chartmuseum
    password: {{ requiredEnv "HELM_SECRET" }}
 

helmDefaults:
  wait: true

environments:
  default:
    values:
      - namespace: aic
        hostname: aicockpit.local
        tls: false
        landing_page: true
        auth:
          enabled: false
          keycloakAdminPw: admin        
          clientSecret: aicockpit
          realmAdminPw: aicockpit
        minio:
          user: minioadmin
          password: minioadmin
        sampledata_import: true
        anomalyProcessing: true
        pullSecret: {{ requiredEnv "PULL_SECRET" }} # Starwit's internal registry
  aic-dev:
    values:  
      - namespace: aic
        hostname: aic.starwit-infra.de
        tls: true
        landing_page: true
        auth:
          enabled: true
          keycloakAdminPw: {{ requiredEnv "KEYCLOAK_ADMIN_PW" }}
          clientSecret: {{ requiredEnv "CLIENT_SECRET" }}
          realmAdminPw: {{ requiredEnv "KEYCLOAK_REALM_PW" }}
        minio:
          user: minioadmin
          password: {{ requiredEnv "MINIO_PW" }}
        sampledata: 
          enabled: true
          importFolder: traffic
          language: en
        anomalyProcessing: true
        pullSecret: {{ requiredEnv "PULL_SECRET" }} # Starwit's internal registry
  aic-dev-trash:
    values:  
      - namespace: aic-trash
        hostname: trash.aic.starwit-infra.de
        tls: true
        landing_page: false
        auth:
          enabled: true
          keycloakAdminPw: {{ requiredEnv "KEYCLOAK_ADMIN_PW" }}
          clientSecret: {{ requiredEnv "CLIENT_SECRET" }}
          realmAdminPw: {{ requiredEnv "KEYCLOAK_REALM_PW" }}
        minio:
          user: minioadmin
          password: {{ requiredEnv "MINIO_PW" }}
        sampledata: 
          enabled: true
          importFolder: trash
          language: en
        anomalyProcessing: false
        pullSecret: {{ requiredEnv "PULL_SECRET" }} # Starwit's internal registry
  aic-dev-cloud:
    values:  
      - namespace: aic-cloud
        hostname: cloud.aic.starwit-infra.de
        tls: true
        landing_page: false
        auth:
          enabled: true
          keycloakAdminPw: {{ requiredEnv "KEYCLOAK_ADMIN_PW" }}
          clientSecret: {{ requiredEnv "CLIENT_SECRET" }}
          realmAdminPw: {{ requiredEnv "KEYCLOAK_REALM_PW" }}
        minio:
          user: minioadmin
          password: {{ requiredEnv "MINIO_PW" }}
        sampledata: 
          enabled: true
          importFolder: cloud
          language: en
        anomalyProcessing: false
        pullSecret: {{ requiredEnv "PULL_SECRET" }} # Starwit's internal registry
  aalen-dev:
    values:  
      - namespace: aic
        hostname: aic.hic.starwit-infra.de
        tls: true
        landing_page: false
        auth:
          enabled: true
          keycloakAdminPw: {{ requiredEnv "KEYCLOAK_ADMIN_PW" }}
          clientSecret: {{ requiredEnv "CLIENT_SECRET" }}
          realmAdminPw: {{ requiredEnv "KEYCLOAK_REALM_PW" }}
        minio:
          user: minioadmin
          password: {{ requiredEnv "MINIO_PW" }}
        sampledata_import: false
        anomalyProcessing: false
        pullSecret: {{ requiredEnv "PULL_SECRET" }} # Starwit's internal registry
  hannover-demo:
    values:
      - environments/hannover-demo.yaml.gotmpl

---
releases:
  - name: config-data
    namespace: {{ .Values.namespace }}
    chart: ./config-data
    installed: true
    values:
      - config-data/values.gotmpl

  - name: landing-page
    namespace: {{ .Values.namespace }}
    chart: oci://registry-1.docker.io/bitnamicharts/apache
    version: 11.3.2
    installed: {{ .Values.landing_page}}
    values:
      - cloneHtdocsFromGit:
          enabled: true
          repository: https://github.com/starwit/ai-cockpit-landing-page.git
          branch: layout-styling
        service:
          ports:
            http: 3080
            https: 3443
        ingress:
          enabled: true
          hostname: {{ .Values.hostname }}
          tls: true
          selfSigned: false
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt-prod
            traefik.ingress.kubernetes.io/router.tls: "true"         

  - name: aicockpit 
    namespace: {{ .Values.namespace }}
    chart: starwitorg/ai-cockpit-chart
    version: "0.2.5"
    values:
      - image:
          tag: "0.2.5-kic"
        app:
          context_path: ""
        auth:
          enabled: {{ .Values.auth.enabled}}
          keycloakRealmUrlInternal: http://keycloak/realms/aicockpit
          keycloakRealmUrlExternal: http{{- if .Values.tls }}s{{- end }}://auth.{{ .Values.hostname }}/realms/aicockpit
          clientId: aicockpit
          clientSecret: {{ .Values.auth.clientSecret }}
        postgresql:
          auth:
            database: aicockpit
            username: aicockpit
            password: aicockpit
        ingress:
          enabled: true
          className: traefik
          hosts:
            - host: cockpit.{{ .Values.hostname }}
              paths:
                - path: "/"
                  pathType: ImplementationSpecific
          tls:
            - hosts:
              - cockpit.{{ .Values.hostname }}
              secretName: aic.{{ .Values.hostname }}
        minio:
          user: {{ .Values.minio.user }}
          password: {{ .Values.minio.password }}
          endpoint: http://minio.{{ .Values.namespace }}.svc.cluster.local:9000
        sampledata:
          enabled: {{ .Values.sampledata.enabled }}
          importFolder: {{ .Values.sampledata.importFolder }}
          language: {{ .Values.sampledata.language }}
        aiapi:
          transparency:
            enabled: true
            uri: http://transparency-api-starwit-aicapi-transparency-chart.{{ .Values.namespace }}.svc.cluster.local:8080
        sbom:
          enabled: true
          generator:
            uri: http://sbom-generator-sbom-generator-chart.{{ .Values.namespace }}.svc.cluster.local:8080

#        extraEnv: |
#          - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY
#            value: TRACE

  - name: keycloak
    namespace: {{ .Values.namespace }}
    chart: oci://registry-1.docker.io/bitnamicharts/keycloak
    installed: true
    version: "21.0.3"  
    values:
      - httpRelativePath: / # set context path for keycloak console
        auth:
          adminUser: admin
          adminPassword: {{ .Values.auth.keycloakAdminPw }}
        proxy: edge
        extraEnvVars:
          - name: KC_HOSTNAME_URL
            value: http{{- if .Values.tls }}s{{- end }}://auth.{{ .Values.hostname }}
          - name: KC_HOSTNAME_ADMIN_URL
            value: http{{- if .Values.tls }}s{{- end }}://auth.{{ .Values | get "hostname" "localhost" }}
        ingress:
          enabled: true
          hostname: auth.{{ .Values.hostname }}
          tls: true
          selfSigned: {{ eq .Environment.Name "default" }}
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt-prod
        postgresql:
          nameOverride: "keycloak-postgresql"
          auth:
            password: bn_keycloak
        keycloakConfigCli:
          enabled: true
          existingConfigmap: aicockpit    
        # try to squeeze more instances on one server
        resources:
          requests:
            cpu: 100m

  - name: minio
    namespace: {{ .Values.namespace }}
    chart: oci://registry-1.docker.io/bitnamicharts/minio
    installed: true
    version: "14.8.5"  
    values:
      - auth:
          rootUser: {{ .Values.minio.user }}
          rootPassword: {{ .Values.minio.password }}
      - ingress:
          enabled: true
          hostname: minio.{{ .Values.hostname }}
          tls: true
          selfSigned: {{ eq .Environment.Name "default" }}
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt-prod

  - name: valkey
    installed: {{ .Values.anomalyProcessing }}
    namespace: {{ .Values.namespace }}
    chart: bitnamicharts/valkey
    version: 2.2.0
    values:
      - architecture: standalone
        primary:
          service:
            type: NodePort
            nodePorts:
              valkey: 30379
        auth:
          enabled: false
        persistence:
          enabled: false
        commonConfiguration: |
          save ""
          appendonly no

  - name: anomaly-post-processing
    installed: {{ .Values.anomalyProcessing }}
    namespace: {{ .Values.namespace }}
    chart: starwit-internal/anomaly-post-processing
    version: 0.15.3
    values:
      - config:
          log_level: INFO
          minio:
            endpoint: "minio:9000"
            user: minioadmin
            password: {{ .Values.minio.password }}
          redis:
            stream_id: stream1
            host: valkey-primary
            port: 6379
            input_stream_prefix: anomalydetection
            output_stream_prefix: reportingaicockpit
        imageCredentials:
          registry: docker.internal.starwit-infra.de
          username: docker
          password: {{ .Values.pullSecret }}

  - name: sbom-generator
    installed: true
    namespace: {{ .Values.namespace }}
    chart: starwitorg/sbom-generator-chart
    version: 0.0.10

  - name: transparency-api
    installed: true
    namespace: {{ .Values.namespace }}
    chart: starwitorg/starwit-aicapi-transparency-chart
    version: 0.1.1
    values:
      - app:
          context_path: ""
          service_uri: http://transparency-api-starwit-aicapi-transparency-chart:8080