repositories:
  - name: starwitorg
    url: registry-1.docker.io/starwitorg
    oci: true

helmDefaults:
  wait: true

environments:
  default:
    values:
      - namespace: aic
        hostname: markus-laptop
        tls: true
        auth:
          keycloakAdminPw: admin        
          clientSecret: aicockpit
          realmAdminPw: aicockpit
        minio:
          user: minioadmin
          password: minioadmin
  aic-dev:
    values:  
      - namespace: aic
        hostname: aic.starwit-infra.de
        tls: true
        auth:
          keycloakAdminPw: {{ requiredEnv "KEYCLOAK_ADMIN_PW" }}
          clientSecret: {{ requiredEnv "CLIENT_SECRET" }}
          realmAdminPw: {{ requiredEnv "KEYCLOAK_REALM_PW" }}
        minio:
          user: minioadmin
          password: {{ requiredEnv "MINIO_PW" }}
  aalen-dev:
    values:  
      - namespace: aic
        hostname: aic.hic.starwit-infra.de
        tls: true
        auth:
          keycloakAdminPw: {{ requiredEnv "KEYCLOAK_ADMIN_PW" }}
          clientSecret: {{ requiredEnv "CLIENT_SECRET" }}
          realmAdminPw: {{ requiredEnv "KEYCLOAK_REALM_PW" }}
        minio:
          user: minioadmin
          password: {{ requiredEnv "MINIO_PW" }}

---
releases:
  - name: config-data
    namespace: {{ .Values.namespace }}
    chart: ./config-data
    installed: true
    values:
      - config-data/values.gotmpl

  - name: aicockpit 
    namespace: {{ .Values.namespace }}
    chart: starwitorg/ai-cockpit-chart
    version: "0.1.6"
    values:
      - image:
          tag: "0.1.6"
        app:
          context_path: "/"
        auth:
          enabled: true
          keycloakRealmUrlInternal: http://keycloak/realms/aicockpit
          keycloakRealmUrlExternal: http{{- if .Values.tls }}s{{- end }}://auth.{{ .Values.hostname }}/realms/aicockpit
          clientId: aicockpit
          clientSecret: {{ .Values.auth.clientSecret }}
        postgresql:
          auth:
            database: aicockpit
            username: aicockpit
            password: aicockpit
        ingress:
          enabled: true
          className: traefik
          hosts:
            - host: cockpit.{{ .Values.hostname }}
              paths:
                - path: "/"
                  pathType: ImplementationSpecific
          tls:
            - hosts:
              - cockpit.{{ .Values.hostname }}
              secretName: aic.{{ .Values.hostname }}
        minio:
          user: {{ .Values.minio.user }}
          password: {{ .Values.minio.password }}
          endpoint: http://minio.{{ .Values.namespace }}.svc.cluster.local:9000

#        extraEnv: |
#          - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY
#            value: TRACE

  - name: keycloak
    namespace: {{ .Values.namespace }}
    chart: oci://registry-1.docker.io/bitnamicharts/keycloak
    installed: true
    version: "21.0.3"  
    values:
      - httpRelativePath: / # set context path for keycloak console
        auth:
          adminUser: admin
          adminPassword: {{ .Values.auth.keycloakAdminPw }}
        proxy: edge
        extraEnvVars:
          - name: KC_HOSTNAME_URL
            value: http{{- if .Values.tls }}s{{- end }}://auth.{{ .Values.hostname }}
          - name: KC_HOSTNAME_ADMIN_URL
            value: http{{- if .Values.tls }}s{{- end }}://auth.{{ .Values | get "hostname" "localhost" }}
        ingress:
          enabled: true
          hostname: auth.{{ .Values.hostname }}
          tls: true
          selfSigned: {{ eq .Environment.Name "default" }}
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt-prod
        postgresql:
          nameOverride: "keycloak-postgresql"
          auth:
            password: bn_keycloak
        keycloakConfigCli:
          enabled: true
          existingConfigmap: aicockpit    

  - name: minio
    namespace: {{ .Values.namespace }}
    chart: oci://registry-1.docker.io/bitnamicharts/minio
    installed: true
    version: "14.8.5"  
    values:
      - auth:
          rootUser: {{ .Values.minio.user }}
          rootPassword: {{ .Values.minio.password }}
      - ingress:
          enabled: true
          hostname: minio.{{ .Values.hostname }}
          tls: true
          selfSigned: {{ eq .Environment.Name "default" }}
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt-prod